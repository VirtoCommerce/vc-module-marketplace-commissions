// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VirtoCommerce.MarketplaceCommissionsModule.Data.Repositories;

#nullable disable

namespace VirtoCommerce.MarketplaceCommissionsModule.Data.PostgreSql.Migrations
{
    [DbContext(typeof(CommissionFeeDbContext))]
    [Migration("20240910142212_AddSellerCommission")]
    partial class AddSellerCommission
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VirtoCommerce.MarketplaceCommissionsModule.Data.Models.CommissionFeeEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CalculationType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Fee")
                        .HasColumnType("Money");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("PredicateVisualTreeSerialized")
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("CommissionFee", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.MarketplaceCommissionsModule.Data.Models.SellerCommissionEntity", b =>
                {
                    b.Property<string>("CommissionFeeId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasIndex("CommissionFeeId");

                    b.HasIndex("SellerId");

                    b.ToTable("SellerCommission", (string)null);
                });

            modelBuilder.Entity("VirtoCommerce.MarketplaceVendorModule.Data.Model.CommissionFeeEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CalculationType")
                        .HasMaxLength(128)
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Fee")
                        .HasColumnType("Money");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("PredicateVisualTreeSerialized")
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasMaxLength(128)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CommissionFeeEntity");
                });

            modelBuilder.Entity("VirtoCommerce.MarketplaceVendorModule.Data.Model.SellerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ApprovalPolicy")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CommissionFeeId")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("RegistrationId")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("CommissionFeeId");

                    b.ToTable("SellerEntity");
                });

            modelBuilder.Entity("VirtoCommerce.MarketplaceCommissionsModule.Data.Models.SellerCommissionEntity", b =>
                {
                    b.HasOne("VirtoCommerce.MarketplaceCommissionsModule.Data.Models.CommissionFeeEntity", "CommissionFee")
                        .WithMany()
                        .HasForeignKey("CommissionFeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VirtoCommerce.MarketplaceVendorModule.Data.Model.SellerEntity", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommissionFee");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("VirtoCommerce.MarketplaceVendorModule.Data.Model.SellerEntity", b =>
                {
                    b.HasOne("VirtoCommerce.MarketplaceVendorModule.Data.Model.CommissionFeeEntity", "CommissionFee")
                        .WithMany()
                        .HasForeignKey("CommissionFeeId");

                    b.Navigation("CommissionFee");
                });
#pragma warning restore 612, 618
        }
    }
}
